namespace Vk.Api.Schema.Parameters.Message
{
    /// <summary>
    /// Интерфейс для представления параметров запроса для messages.getHistory <para/>
    /// Документация: <see href="https://vk.com/dev/messages.getHistory"/>
    /// </summary>
    public interface IMessageGetHistoryParameters
    {
        /// <summary>
        /// Смещение, необходимое для выборки определенного подмножества сообщений
        /// </summary>
        /// <remarks>
        /// Должен быть >= 0, если не передан параметр StartMessageId, 
        /// и должен быть меньше или равен 0, если передан
        /// </remarks>
        int? Offset { get; set; }

        /// <summary>
        /// Количество сообщений, которое необходимо получить
        /// </summary>
        /// <remarks>
        /// По умолчанию 20, максимальное значение 200
        /// </remarks>
        int? Count { get; set; }

        /// <summary>
        /// Идентификатор пользователя, историю переписки с которым необходимо вернуть
        /// </summary>
        string UserId { get; set; } // TODO: Точно строка? (проверить)

        /// <summary>
        /// Идентификатор назначения
        /// </summary>
        /// <remarks>
        /// Для пользователя: id пользователя,
        /// Для групповой беседы: 2000000000 + id беседы,
        /// Для сообщества: -id сообщества,
        /// Доступен начиная с версии 5.38
        /// </remarks>
        int? PeerId { get; set; }

        /// <summary>
        /// Идентификатор сообщения, начиная с которого нужно вернуть историю переписки
        /// </summary>
        /// <remarks>
        /// Если 0 то вернутся сообщения с самого начала переписки,
        /// если -1, то к значению параметра Offset прибавляется количество входящих непрочитанных 
        /// сообщений в конце диалога
        /// </remarks>
        int? StartMessageId { get; set; }

        /// <summary>
        /// Порядок возврата сообщений
        /// </summary>
        /// <remarks>
        /// 1 – возвращать сообщения в хронологическом порядке,
        /// 0 – возвращать сообщения в обратном хронологическом порядке,
        /// по умолчанию 0
        /// </remarks>
        int? Rev { get; set; }
    }
}
